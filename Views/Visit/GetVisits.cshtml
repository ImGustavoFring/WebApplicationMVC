@model IEnumerable<(string Month, int TotalCount)>

@{
    Layout = "~/Views/Shared/_MainLayout.cshtml";
    var months = Model.Select(v => v.Month).ToArray();
    var counts = Model.Select(v => v.TotalCount).ToArray();

    // Определим последние 3 месяца
    var last3MonthsIndexStart = months.Length - 3;
    var last3Months = months.Skip(last3MonthsIndexStart).ToArray();
    var last3Counts = counts.Skip(last3MonthsIndexStart).ToArray();

    // Все месяцы и их количество
    var allMonths = months.ToArray();
    var allCounts = counts.ToArray();
}

<h2>Статистика посещений (по месяцам)</h2>

@if (!months.Any())
{
    <p>Данные для отображения графика отсутствуют.</p>
}
else
{
    <canvas id="visitChart" width="800" height="400"></canvas>
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('visitChart').getContext('2d');

    const allLabels = @Html.Raw(Json.Serialize(allMonths));
    const allCounts = @Html.Raw(Json.Serialize(allCounts));

    // Выделяем последние 3 месяца красным
    const highlightedCounts = allCounts.map((count, index) => {
        return {
            x: allLabels[index],
            y: count,
            backgroundColor: (index >= allLabels.length - 3) ? 'rgba(255, 99, 132, 1)' : 'rgba(75, 192, 192, 1)', // Красный для последних 3 месяцев
            borderColor: (index >= allLabels.length - 3) ? 'rgba(255, 99, 132, 1)' : 'rgba(75, 192, 192, 1)',
            pointBackgroundColor: (index >= allLabels.length - 3) ? 'rgba(255, 99, 132, 1)' : 'rgba(75, 192, 192, 1)',
            pointBorderColor: (index >= allLabels.length - 3) ? 'rgba(255, 99, 132, 1)' : 'rgba(75, 192, 192, 1)'
        };
    });

    const visitChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: allLabels,
            datasets: [{
                label: 'Фактические посещения за месяц',
                data: highlightedCounts.map(point => point.y), // Значения для линии
                borderColor: 'rgba(75, 192, 192, 1)', // Цвет линии по умолчанию
                backgroundColor: 'rgba(75, 192, 192, 0.2)', // Легкая заливка по умолчанию
                borderWidth: 2,
                fill: true,
                pointBackgroundColor: highlightedCounts.map(point => point.pointBackgroundColor), // Точки с выделением
                pointBorderColor: highlightedCounts.map(point => point.pointBorderColor), // Границы точек с выделением
                // Добавим разные цвета для легенды
                pointRadius: 5
            }]
        },
        options: {
            responsive: true,
            plugins: {
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            return `Количество: ${context.raw}`;
                        }
                    }
                },
                legend: {
                    display: true,
                    labels: {
                        generateLabels: function(chart) {
                            let original = Chart.defaults.plugins.legend.labels.generateLabels(chart);
                            // Добавим новые элементы для легенды
                            original.push({
                                text: 'Предсказанные посещения (последние 3 месяца)',
                                fillStyle: 'rgba(255, 99, 132, 1)', // Красный для последних 3 месяцев
                                strokeStyle: 'rgba(255, 99, 132, 1)',
                                lineWidth: 3
                            });
                            return original;
                        }
                    }
                },
            },
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Месяц'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Количество посещений'
                    },
                    beginAtZero: true
                }
            }
        }
    });
</script>
