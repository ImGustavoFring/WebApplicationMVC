@model WebApplicationMVC.Models.Article
@using System.Security.Claims;
@{
    ViewData["Title"] = "Детали статьи";
    Layout = "_MainLayout";
}

<div class="container mt-5" style="margin-top: 100px; margin-bottom: 100px;">
    <div class="card">
        <div class="card-header">
            <h2>@Model.Title</h2>
            <p><strong>Автор:</strong> @Model.User?.Username</p>

            <p><strong>Теги:</strong></p>
            <ul>
                @foreach (var tag in Model.Tags.ToList())
                {
                    <li>@tag.Name</li>
                }
            </ul>

            <p><strong>Дата создания:</strong> @Model.Createdat.ToString("yyyy-MM-dd HH:mm")</p>
            @if (Model.Updatedat.HasValue)
            {
                <p><strong>Последнее обновление:</strong> @Model.Updatedat.Value.ToString("yyyy-MM-dd HH:mm")</p>
            }
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-start mb-4">
                <div class="user-avatar-wrapper" style="width: 500px; height: 500px; background-color: #bdc3c7; border-radius: 5px; overflow: hidden;">
                    <img id="previewUrl" src="@Model.Previewurl" alt="Превью статьи не загружено." class="preview-img" style="width: 100%; height: 100%; object-fit: cover;" />
                </div>
            </div>
            <p><strong>Содержание:</strong> @Model.Content</p>

            <p><strong>Количество просмотров:</strong> @(Model.Views?.Count ?? 0)</p>

            <p>
                <strong>Средняя оценка:</strong> @(Model.Ratings?.Any() == true
                ? Model.Ratings.Average(r => r.Value).ToString("F1")
                : "Нет оценок") из 10.
            </p>

            @if (User.Identity.IsAuthenticated)
            {
                var userRating = Model.Ratings.FirstOrDefault(r => r.Userid == int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)));

                if (userRating == null)
                {
                    <h4>Оценить статью</h4>
                    <form method="post" action="@Url.Action("Create", "Rating", new { articleId = Model.Id })">
                        <input type="number" name="value" min="1" max="10" class="form-control" required />
                        <button type="submit" class="btn btn-secondary mt-3">Оценить</button>
                    </form>
                }
                else
                {
                    <h4>Ваша оценка: @userRating.Value</h4>
                    <form method="post" action="@Url.Action("Update", "Rating", new { articleId = Model.Id })">
                        <input type="number" name="value" min="1" max="10" class="form-control" value="@userRating.Value" required />
                        <button type="submit" class="btn btn-secondary mt-3">Обновить оценку</button>
                    </form>
                    <form method="post" action="@Url.Action("Delete", "Rating", new { articleId = Model.Id })" class="mt-3">
                        <button type="submit" class="btn btn-danger">Удалить оценку</button>
                    </form>
                }
            }

            <h3>Рецензии: @(Model.Comments?.Count ?? 0)</h3>
            <div>
                @foreach (var comment in Model.Comments.OrderBy(c => c.Createdat))
                {
                    <div class="border p-3 mb-3">
                        <p><strong>@comment.User?.Username</strong> (Дата: @comment.Createdat.ToString("yyyy-MM-dd HH:mm"))</p>
                        <p>@comment.Content</p>
                        @if (comment.Userid == int.Parse(User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier)))
                        {
                            <form method="post" action="@Url.Action("Edit", "Comment", new { articleId = Model.Id })">
                                <textarea name="newContent" class="form-control" required>@comment.Content</textarea>
                                <button type="submit" class="btn btn-secondary mt-2">Изменить</button>
                            </form>
                            <form method="post" action="@Url.Action("Delete", "Comment", new { articleId = Model.Id })" class="mt-2">
                                <button type="submit" class="btn btn-danger">Удалить</button>
                            </form>
                        }
                    </div>
                }

                @if (User.Identity.IsAuthenticated)
                {
                    var userComment = Model.Comments.FirstOrDefault(c => c.Userid == int.Parse(User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier)));

                    if (userComment == null)
                    {
                        <h4>Добавить рецензию</h4>
                        <form method="post" action="@Url.Action("Add", "Comment", new { articleId = Model.Id })">
                            <textarea name="content" class="form-control" placeholder="Ваша рецензия" required></textarea>
                            <button type="submit" class="btn btn-secondary mt-3">Отправить</button>
                        </form>
                    }
                    else
                    {
                        <p><strong>Вы уже оставили рецензию к этой статье.</strong></p>
                    }
                }
            </div>
        </div>
        <div class="card-footer">
            <a href="@Url.Action("Edit", "Article", new { id = Model.Id })" class="btn btn-primary">Редактировать</a>
            <a href="@Url.Action("Articles", "Article")" class="btn btn-secondary">Назад</a>
        </div>
    </div>
</div>
