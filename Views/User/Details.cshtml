@using System.Security.Claims
@model WebApplicationMVC.Models.User

@{
    Layout = "_MainLayout";
    ViewData["Title"] = "Информация о пользователе";
}

<div class="container mt-5" style="margin-top: 100px; margin-bottom: 100px;">
    <div class="mb-4">
        <form action="@Url.Action("Search", "User")" method="get" class="d-flex" onsubmit="return validateSearchQuery();">
            <input id="searchQuery" type="text" name="query" class="form-control me-2" placeholder="Введите запрос для поиска пользователей..." />
            <button type="submit" class="btn btn-primary">Найти</button>
        </form>
    </div>

    <div class="card">
        <div class="card-header">
            <h2>Информация о пользователе</h2>
        </div>
        <div class="card-body">
            <div class="d-flex justify-content-start mb-4">
                <div class="user-avatar-wrapper" style="width: 120px; height: 160px; background-color: #bdc3c7; border-radius: 5px; overflow: hidden;">
                    <img src="@Model.Avatarurl" alt="Аватар пользователя не загружен." class="user-avatar" style="width: 100%; height: 100%; object-fit: cover;" />
                </div>
            </div>
            <p><strong>Логин:</strong> @Model.Username</p>
            <p><strong>Электронная почта:</strong> @Model.Email</p>
            <p><strong>Полное имя:</strong> @Model.Fullname</p>
            <p><strong>О себе:</strong> @(Model.Bio ?? "Информация отсутствует")</p>
            <p><strong>Контактная информация:</strong> @(Model.Contactinfo ?? "Контактная информация отсутствует")</p>
            <p><strong>Роль:</strong> @(Model.Role?.Name == "Admin" ? "Администратор" : (Model.Role?.Name == "User" ? "Пользователь" : "Роль не назначена"))</p>
            <p><strong>Дата создания аккаунта:</strong> @Model.Createdat.ToString("yyyy-MM-dd HH:mm")</p>
            @if (Model.Updatedat.HasValue)
            {
                <p><strong>Последнее обновление:</strong> @Model.Updatedat.Value.ToString("yyyy-MM-dd HH:mm")</p>
            }
        </div>
        <div class="card-footer">
            <div class="d-flex justify-content-start">
                <a class="btn btn-secondary" href="@Url.Action("Articles", "Article", new { id = Model.Id })" style="margin-right: 10px;">Просмотреть статьи</a>
                <a class="btn btn-secondary" href="@Url.Action("Subscriptions", "Subscription", new { id = Model.Id })" style="margin-right: 10px;">Посмотреть подписки</a>
                <a class="btn btn-secondary" href="@Url.Action("Subscribers", "Subscription", new { id = Model.Id })" style="margin-right: 10px;">Посмотреть подписчиков</a>

                @{
                    var currentUserId = int.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier));
                    var isAdmin = User.IsInRole("Admin");
                }

                @if (Model.Id == currentUserId)
                {
                    <a class="btn btn-primary" href="@Url.Action("Edit", "User", new { id = Model.Id })" style="margin-right: 10px;">Редактировать профиль</a>

                    <a href="@Url.Action("Logout", "Auth")" class="btn btn-secondary" style="border: 1px solid #6c757d; background-color: transparent; color: #6c757d; margin-right: 10px;">Выйти</a>

                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteAccountModal" style="margin-right: 10px;">Удалить аккаунт</button>
                }
                else if (isAdmin)
                {
                    <a class="btn btn-primary" href="@Url.Action("Edit", "User", new { id = Model.Id })" style="margin-right: 10px;">Редактировать</a>

                    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteAccountModal" style="margin-right: 10px;">Удалить</button>
                }

                @if (Model.Id != currentUserId && !isAdmin)
                {
                    var isSubscribed = Model.SubscriptionAuthors.Any(s => s.Subscriberid == currentUserId);

                    if (!isSubscribed)
                    {
                        <form method="post" action="@Url.Action("Subscribe", "Subscription", new { id = Model.Id })">
                            <button type="submit" class="btn btn-primary" style="margin-right: 10px;">Подписаться</button>
                        </form>
                    }
                    else
                    {
                        <form method="post" action="@Url.Action("Unsubscribe", "Subscription", new { id = Model.Id })">
                            <button type="submit" class="btn btn-danger" style="margin-right: 10px;">Отписаться</button>
                        </form>
                    }
                }
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteAccountModal" tabindex="-1" aria-labelledby="deleteAccountModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteAccountModalLabel">Подтверждение удаления</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Вы уверены, что хотите удалить аккаунт? Это действие невозможно отменить.
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                <form method="post" action="@Url.Action("Delete", "User", new { id = Model.Id })">
                    <button type="submit" class="btn btn-danger">Удалить аккаунт</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function validateSearchQuery() {
        const query = document.getElementById('searchQuery').value.trim();
        if (query === '') {
            alert('Введите текст для поиска!');
            return false;
        }
        return true;
    }
</script>
